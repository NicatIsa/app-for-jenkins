# This is a basic workflow to help you get started with Actions

name: CI-CD-Pipeline-to-AWS-ElastikBeastalk
env:
 EB_PACKAGE_S3_BUCKET_NAME: "my-flask-app-packages"
 EB_APP_NAME: "My-Flask"
 EB_ENV_NAME: "Myflask-env"
 DEPLOY_PACKAGE_NAME: "flask_app_${{ github.sha }}.zip"
 AWS_REGION_NAME: "eu-north-1"
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  my_ci_part:
    runs-on: ubuntu-latest
    
    steps:
      - name: Cit Clone our repo
        uses: actions/checkout@v1
      
      
      - name: Create zip deployment package
        run: zip -r ${{env.DEPLOY_PACKAGE_NAME}} ./ -x *.git
       
      - name: Authentication with AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Copy deployment package to S3 bucket
        run: aws s3 cp ${{env.DEPLOY_PACKAGE_NAME}} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
        
      - name: Print Happy Message for CI
        run: echo "CI PIPELINE PART FINISHED SUCCESSFULLY"
        
        
  my_cd_part:
    runs-on: ubuntu-latest
    needs: [my_ci_part]
    
    steps:      
    - name: Authentication with AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
        aws-region: ${{ env.AWS_REGION_NAME }}
          
    - name: Create new Elastic Beanstalk app
      run: |
       aws elasticbeanstalk create-application-version \
       --application-name ${{ env.EB_APP_NAME }} \
       --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
       --version-label "Ver-${{ github.sha }}" \
       --description "CommitSHA-${{ github.sha }}"
       
    - name: Deploy New Elastik Beanstalk Application Version
      run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENV_NAME }} --version-label "Ver-${{ github.sha }}"

    - name: Print Happy Message for CD
      run: echo "CD PIPELINE PART FINISHED SUCCESSFULLY"









